# Generated by Django 4.2.16 on 2024-11-01 11:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import metrics.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=128, null=True, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=1024)),
                ("date_start", models.DateField()),
                ("date_end", models.DateField()),
                ("duration", models.DecimalField(decimal_places=2, max_digits=6)),
                (
                    "type",
                    models.TextField(
                        choices=[
                            ("Training - face to face", "Training - face to face"),
                            ("Training - e-learning", "Training - e-learning"),
                            ("Training - blended", "Training - blended"),
                            (
                                "Knowledge Exchange Workshop",
                                "Knowledge Exchange Workshop",
                            ),
                            ("Hackathon", "Hackathon"),
                        ]
                    ),
                ),
                ("location_city", models.CharField(max_length=128)),
                ("location_country", models.CharField(max_length=128)),
                (
                    "funding",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                ("ELIXIR Converge", "ELIXIR Converge"),
                                ("EOSC Life", "EOSC Life"),
                                ("EXCELERATE", "EXCELERATE"),
                                (
                                    "ELIXIR Implementation Study",
                                    "ELIXIR Implementation Study",
                                ),
                                (
                                    "ELIXIR Community / Use case",
                                    "ELIXIR Community / Use case",
                                ),
                                ("ELIXIR Node", "ELIXIR Node"),
                                ("ELIXIR Hub", "ELIXIR Hub"),
                                ("ELIXIR Platform", "ELIXIR Platform"),
                                (
                                    "Non-ELIXIR / Non-EXCELERATE Funds",
                                    "Non-ELIXIR / Non-EXCELERATE Funds",
                                ),
                            ]
                        ),
                        size=None,
                    ),
                ),
                (
                    "target_audience",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                (
                                    "Academia / Research Institution",
                                    "Academia / Research Institution",
                                ),
                                ("Industry", "Industry"),
                                ("Non-profit Organisation", "Non-profit Organisation"),
                                ("Healthcare", "Healthcare"),
                            ]
                        ),
                        size=None,
                    ),
                ),
                (
                    "additional_platforms",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                ("Compute", "Compute"),
                                ("Data", "Data"),
                                ("Interoperability", "Interoperability"),
                                ("Tools", "Tools"),
                                ("NA", "NA"),
                            ]
                        ),
                        size=None,
                    ),
                ),
                (
                    "communities",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                ("Human Data", "Human Data"),
                                ("Marine Metagenomics", "Marine Metagenomics"),
                                ("Rare Diseases", "Rare Diseases"),
                                ("Plant Sciences", "Plant Sciences"),
                                ("Proteomics", "Proteomics"),
                                ("Metabolomics", "Metabolomics"),
                                ("Galaxy", "Galaxy"),
                                ("NA", "NA"),
                            ]
                        ),
                        size=None,
                    ),
                ),
                ("number_participants", models.PositiveIntegerField()),
                ("number_trainers", models.PositiveIntegerField()),
                ("url", models.URLField(max_length=4096)),
                (
                    "status",
                    models.TextField(
                        choices=[("Complete", "Complete"), ("Incomplete", "Incomplete")]
                    ),
                ),
                ("locked", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Node",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("country", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="OrganisingInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField()),
                ("country", models.TextField()),
                (
                    "ror_id",
                    models.URLField(
                        max_length=512,
                        null=True,
                        unique=True,
                        validators=[metrics.models.is_ror_id],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Quality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "used_resources_before",
                    models.TextField(
                        blank=True,
                        choices=[
                            (
                                "Frequently (weekly to daily)",
                                "Frequently (weekly to daily)",
                            ),
                            (
                                "Occasionally (once in a while to monthly)",
                                "Occasionally (once in a while to monthly)",
                            ),
                            (
                                "Never - used other service",
                                "Never - used other service",
                            ),
                            (
                                "Never - aware of them, but not used them",
                                "Never - aware of them, but not used them",
                            ),
                            ("Never - unaware of them", "Never - unaware of them"),
                        ],
                    ),
                ),
                (
                    "used_resources_future",
                    models.TextField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No"), ("Maybe", "Maybe")],
                    ),
                ),
                (
                    "recommend_course",
                    models.TextField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No"), ("Maybe", "Maybe")],
                    ),
                ),
                (
                    "course_rating",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("Poor (1)", "Poor (1)"),
                            ("Satisfactory (2)", "Satisfactory (2)"),
                            ("Good (3)", "Good (3)"),
                            ("Very Good (4)", "Very Good (4)"),
                            ("Excellent (5)", "Excellent (5)"),
                        ],
                    ),
                ),
                (
                    "balance",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("About right", "About right"),
                            ("Too theoretical", "Too theoretical"),
                            ("Too practical", "Too practical"),
                        ],
                    ),
                ),
                (
                    "email_contact",
                    models.TextField(choices=[("Yes", "Yes"), ("No", "No")]),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="metrics.event"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Impact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "when_attend_training",
                    models.TextField(
                        choices=[
                            ("Less than 6 months", "Less than 6 months"),
                            ("6 months to a year", "6 months to a year"),
                            ("Over a year", "Over a year"),
                        ]
                    ),
                ),
                (
                    "main_attend_reason",
                    models.TextField(
                        blank=True,
                        choices=[
                            (
                                "To learn something new to aid me in my current research/work",
                                "To learn something new to aid me in my current research/work",
                            ),
                            (
                                "To learn something new for my own interests",
                                "To learn something new for my own interests",
                            ),
                            (
                                "To build on existing knowledge to aid me in my current research/work",
                                "To build on existing knowledge to aid me in my current research/work",
                            ),
                            (
                                "To build on existing knowledge for my own interests",
                                "To build on existing knowledge for my own interests",
                            ),
                            ("Other", "Other"),
                        ],
                    ),
                ),
                (
                    "how_often_use_before",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("Never - unaware of them", "Never - unaware of them"),
                            (
                                "Never - aware of them, but had not used them",
                                "Never - aware of them, but had not used them",
                            ),
                            (
                                "Never - used other service",
                                "Never - used other service",
                            ),
                            (
                                "Occasionally (once in a while to monthly)",
                                "Occasionally (once in a while to monthly)",
                            ),
                            (
                                "Frequently (weekly to daily)",
                                "Frequently (weekly to daily)",
                            ),
                        ],
                    ),
                ),
                (
                    "how_often_use_after",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("Never - use other service", "Never - use other service"),
                            (
                                "Occasionally (once in a while to monthly)",
                                "Occasionally (once in a while to monthly)",
                            ),
                            (
                                "Frequently (weekly to daily)",
                                "Frequently (weekly to daily)",
                            ),
                        ],
                    ),
                ),
                (
                    "able_to_explain",
                    models.TextField(
                        choices=[
                            ("Yes", "Yes"),
                            ("No", "No"),
                            ("Maybe", "Maybe"),
                            ("Other", "Other"),
                        ]
                    ),
                ),
                (
                    "able_use_now",
                    models.TextField(
                        choices=[
                            ("Independently", "Independently"),
                            (
                                "By using training materials/notes from the training event",
                                "By using training materials/notes from the training event",
                            ),
                            (
                                "With the help of an expert",
                                "With the help of an expert",
                            ),
                            ("Other", "Other"),
                        ]
                    ),
                ),
                (
                    "help_work",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                (
                                    "It did not help as I do not use the tool(s)/resource(s) covered in the training event",
                                    "It did not help as I do not use the tool(s)/resource(s) covered in the training event",
                                ),
                                (
                                    "It enabled me to complete certain tasks more quickly",
                                    "It enabled me to complete certain tasks more quickly",
                                ),
                                (
                                    "It has not helped yet but I anticipate a future impact",
                                    "It has not helped yet but I anticipate a future impact",
                                ),
                                (
                                    "It improved communication with the bioinformatician/statistician analyzing my data",
                                    "It improved communication with the bioinformatician/statistician analyzing my data",
                                ),
                                (
                                    "It improved my ability to handle data",
                                    "It improved my ability to handle data",
                                ),
                                ("Other", "Other"),
                            ]
                        ),
                        size=None,
                    ),
                ),
                (
                    "attending_led_to",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                ("Authoring of software", "Authoring of software"),
                                ("Change in career", "Change in career"),
                                ("Not applicable", "Not applicable"),
                                ("Other", "Other"),
                                ("Publication of my work", "Publication of my work"),
                                (
                                    "Submission of a grant application",
                                    "Submission of a grant application",
                                ),
                                (
                                    "Submission of my dissertation/thesis for degree purposes",
                                    "Submission of my dissertation/thesis for degree purposes",
                                ),
                                (
                                    "Useful collaboration(s) with other participants/trainers from the training event",
                                    "Useful collaboration(s) with other participants/trainers from the training event",
                                ),
                            ]
                        ),
                        blank=True,
                        size=None,
                    ),
                ),
                (
                    "people_share_knowledge",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("None", "None"),
                            (
                                "None yet, but intend to do so in the future",
                                "None yet, but intend to do so in the future",
                            ),
                            ("1-5", "1-5"),
                            ("6-15", "6-15"),
                            ("16-24", "16-24"),
                            ("25+", "25+"),
                        ],
                    ),
                ),
                (
                    "recommend_others",
                    models.TextField(
                        blank=True,
                        choices=[
                            ("Yes, I already have", "Yes, I already have"),
                            ("Yes, I would", "Yes, I would"),
                            ("Maybe", "Maybe"),
                            ("No", "No"),
                        ],
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="metrics.event"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="node",
            field=models.ManyToManyField(to="metrics.node"),
        ),
        migrations.AddField(
            model_name="event",
            name="node_main",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="node_main",
                to="metrics.node",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="organising_institution",
            field=models.ManyToManyField(to="metrics.organisinginstitution"),
        ),
        migrations.AddField(
            model_name="event",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Demographic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("employment_country", models.TextField(blank=True)),
                (
                    "heard_from",
                    metrics.models.ChoiceArrayField(
                        base_field=models.TextField(
                            choices=[
                                ("TeSS", "TeSS"),
                                ("Host Institute Website", "Host Institute Website"),
                                ("Email", "Email"),
                                ("Newsletter", "Newsletter"),
                                ("Colleague", "Colleague"),
                                ("Internet search", "Internet search"),
                                ("Other", "Other"),
                            ]
                        ),
                        size=None,
                        verbose_name="Where did you hear about this course?",
                    ),
                ),
                (
                    "employment_sector",
                    models.TextField(
                        choices=[
                            (
                                "Academia/ Research Institution",
                                "Academia/ Research Institution",
                            ),
                            ("Industry", "Industry"),
                            ("Non-Profit Organisation", "Non-Profit Organisation"),
                            ("Healthcare", "Healthcare"),
                            ("Other", "Other"),
                        ],
                        verbose_name="Employment sector",
                    ),
                ),
                (
                    "gender",
                    models.TextField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                            ("Prefer not to say", "Prefer not to say"),
                        ]
                    ),
                ),
                (
                    "career_stage",
                    models.TextField(
                        choices=[
                            ("Undergraduate student", "Undergraduate student"),
                            ("Masters student", "Masters student"),
                            ("PhD candidate", "PhD candidate"),
                            ("Postdoctoral researcher", "Postdoctoral researcher"),
                            (
                                "Senior scientist/ Principal investigator",
                                "Senior scientist/ Principal investigator",
                            ),
                            (
                                "Research assistant/ Technician",
                                "Research assistant/ Technician",
                            ),
                            ("Other", "Other"),
                        ],
                        verbose_name="Career stage",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="metrics.event"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
